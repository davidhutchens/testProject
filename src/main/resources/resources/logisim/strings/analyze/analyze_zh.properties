#
# data/CsvInterpretor.java
#
CsvBitNotSpecified = CSV文件‘’%2！‘’的第%1$d行不包含变量‘’%2$s‘’的第%2$d位，正在中止。
CsvDuplicatedBit = CSV文件‘%2$s’的第%1$d行包含变量‘%3$s’的位%3$d的两倍，正在中止。
CsvDuplicatedVar = CSV文件‘%2$s’的第%1$d行包含变量‘%3$s’的多次，正在中止。
CsvIncorrectBitOrder = CSV文件‘%2$s’的第%1$d行包含变量‘%3$s’的错误位序列，正在中止。
CsvIncorrectEmpty = CSV文件‘%2$s’的第%1$d行在位置%3$d处包含不正确的空字段，正在中止。
CsvIncorrectLine = CSV文件‘%2$s’的第%1$d行具有%3$d个条目，而不是所需的%3$d个条目，正在中止。
CsvIncorrectVarName = CSV文件‘%2$s’的第%1$d行包含不正确的格式化标签‘%3$s’，正在中止。
CsvInvalidEntry = CSV文件‘%2$s’的行%1$d在字段%3$d处包含无效条目‘%3$s’，正在中止。
CsvNoEntries = 文件“%s”不包含任何条目，正在中止。
CsvNoInputsFound = CSV文件‘%2$s’的第%1$d行不包含任何输入，正在中止。
CsvNoSepFound = CSV文件‘%2$s’的第%1$d行不包含分隔符字段，正在中止。
CsvNotEnoughEmpty = CSV文件‘’%2！‘’的第%1$d行在变量‘’%3！‘’之后没有足够的空字段，正在中止。
#
# data/ExpressionRenderData.java
#
expressionEmpty = (空)
#
# file/AnalyzerTexWriter.java
#
latexBabelLanguage = 英语
latexEmpty = 空分析器
latexEmptyText = 由于分析器在生成本文档时没有输入变量和/或输出变量，因此没有什么可显示的。
latexHeader = Logisim-%s上的演进生成的文档
latexIntroduction = 引言
latexIntroductionText = 本文档是由logisim-Evolution生成的。TeX源代码的任何部分都可以在您自己的文档中使用，没有任何问题。如果您想要使用此生成的TeX源代码的全部/部分，请(1)不要忘记包含所需的软件包，以及(2)包含此源代码是由logisim-Evolution生成的备注。
latexKarnaugh = 卡诺图
latexKarnaughEmpty = 空卡诺图
latexKarnaughFilledIn = 填写卡诺图
latexKarnaughFilledInGroups = 用封面填充卡诺图
latexKarnaughText = 本节显示给定函数的卡诺图的各种版本。
latexKarnaughToBig = 无法显示输入变量超过%d个的卡诺图。
latexMinimal = 极小表达式
latexTruthTable = 真值表
latexTruthTableComlete = 完整真值表
latexTruthTableCompact = 压缩真值表
latexTruthTableText = 表格可能太大了，无法在页面上显示。在生成时，没有针对页面的宽度/高度计算表的大小。
latexTruthTableToBig = \~\真值表有%d个以上的条目，在此显示没有任何意义。
tableLatexFilter = Logisim-演进纹理文档(*.tex)
#
# file/TruthtableCsvFile.java
#
tableCsvFileFilter = Logisim-演进真值表(*.csv)
#
# file/TruthtableTextFile.java
#
tableParseErrorMessage = 是否忽略错误并重试？
tableParseErrorTitle = 解析真值表时出错
tableRemark1 = #真值表
tableRemark2 = #从电路%s生成
tableRemark3 = #在%s上导出
tableRemark4 = #格式提示和备注：\n#*您可以编辑此文件，然后将其导入回Logisim！\n#*‘#’后面的任何内容都是注释，将被忽略。\n#*将忽略空行和分隔行(例如，~)。\n#*保持列名简单(没有空格、标点符号等)\n#*‘Name[N..0]’表示N+1位变量，而\n#‘NAME’本身表示1位变量。\n#*您可以使用‘x’或‘-’来表示\n#输入和输出位的\n‘无关紧要’。\n#*您可以使用二进制(例如，‘10100011xxxx’)表示法、\n#或祸不单行(例如，‘C3x’)。洛吉西姆会找出哪个是哪个。
tableTxtFileFilter = Logisim-演进真值表(*.txt)
#
# gui/Analyzer.java
#
analyzePleaseWait = 请稍等
analyzerWindowTitle = 组合分析
buildCircuitButton = 构建回路
exportLatexButton = 导出纹理
exportTableButton = 导出表
expressionTab = 表达式
expressionTabTip = 查看和操作输出的表达式。
importTableButton = 导入表
inputsOutputsTab = 输入输出
inputsOutputsTabTip = 查看和编辑输入和输出变量集。
minimizedTab = 最小化
minimizedTabTip = 查看真值表对应的最小化表达式。
tableTab = 表格
tableTabTip = 查看并操作真值表。
# ==> minimizeMintermsButton =
# ==> minimizeMaxtermsButton =
#
# gui/MinimizeButton.java
#
# ==> OptimizeLongTimeWarning = 
# ==> minimizeFunctionTitle = 
# ==> minimizeDone = 
#
# model/Implicant.java
#
# ==> implicantOutputName =
# ==> implicantGroupSize =
# ==> implicantNoneFound =
# ==> implicantColumRowReduction =
# ==> implicantGreedy =
#
# gui/BuildCircuitButton.java
#
buildConfirmReplaceMessage = 您确定要替换电路%s吗？
buildConfirmReplaceTitle = 确认替换
buildDialogErrorTitle = 无法构建电路
buildDialogTitle = 构建回路
buildDuplicatedNameError = 电路名称不能等于输入或输出的名称。请指定其他名称。
buildNameLabel = 线路名称：
buildNandsLabel = 仅使用与非门
buildNeedCircuitError = 您必须指定回路名称。
buildNeedProjectError = 您必须选择一个目标项目。
buildProjectLabel = 目标项目：
buildTwoInputsLabel = 仅使用双输入门
replaceCircuitAction = 替换线路
# ==> zeroOrNotOptimizedMessage = 
#
# gui/CsvReadParameterDialog.java
#
ConfirmCsvParameters = 继续
cvsFilePreview = 预览读入文件的前四行：
seperatorSpace = {空格}
SeperatorTab = {tab}
UsedQuotesInFile = 选择CSV文件中使用的“引号”字符：
UsedSeperatorInFile = 选择CSV文件中使用的“分隔符”字符：
#
# gui/ExportLatexButton.java
#
cantWriteMessage = 无法写入文件：%s
confirmOverwriteMessage = 确实要覆盖文件%s吗？
confirmOverwriteTitle = 确认覆盖
notFileMessage = 不是文件：%s
saveButton = 导出真值表
saveErrorTitle = 保存文件时出错
#
# gui/ExpressionTab.java
#
cantImportFormatError = 无法导入此类型的数据
outputExpressionEdit = 输出表达式(双击可编辑)：
#
# gui/ImportTableButton.java
#
cantReadMessage = 无法读取文件：%s
DoNotKnowHowto = 不知道如何读取或写入文件‘%s’(扩展名应为.txt或.csv)。
openButton = 导入真值表
openErrorTitle = 读取文件时出错
#
# gui/KarnaughMapPanel.java
#
karnaughNoInputsError = 没有可用的输入。
karnaughNoOutputError = 未选择任何输出。
karnaughTooFewInputsError = 表的输入太少。
karnaughTooManyInputsError = 表的输入太多。
NoSelectedKmapGroup = 未选择任何组。
SelectedKmapGroup = 选定的组：
#
# gui/MinimizedTab.java
#
expressionAltLogicrepresentation = 备选逻辑
expressionCalc = 计算表达式
expressionLogicrepresentation = 逻辑上的
expressionMathrepresentation = 数学
ExpressionNotation = 注释：
expressionProgbitsrepresentation = 位编程
expressionProgboolsrepresentation = 使用布尔值进行编程
KMapLinedStyle = 衬里
KmapNumberedStyle = 编号的
KmapStyle = 风格：
minimizedFormat = 格式：
minimizedProductOfSums = 和的乘积
minimizedSetButton = 设置为表达式
minimizedSumOfProducts = 产品总和
#
# gui/OutputSelector.java
#
outputSelectLabel = 输出：
#
# gui/TableTab.java
#
tableCompact = 折叠重复行
tableExpand = 显示所有行
tableNoInputs = (无输入)
tableNoOutputs = (无输出)
tableRowsShown = 显示%d行(共%d行)
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = 压缩行
#
# gui/TableTabClip.java
#
clipPasteEndError = 剪贴板超出了桌子的末端。
clipPasteErrorTitle = 粘贴错误
clipPasteSizeError = 粘贴区域必须与剪贴板大小相同。
clipPasteSupportedError = 无法将剪贴板内容粘贴到编辑器中。
#
# gui/VariableTab.java
#
inputVariables = 输入变量
outputVariables = 输出变量
variableClickToAdd = 单击以添加新变量
variableDuplicateError = 名称与现有变量重复。
variableMaximumError = (已达到%s的最大大小。)
variablePartError = 名称不能包含‘%s’。
variableRangeFinalPar = 范围：缺少]紧跟在LSB索引之后
variableRangeInvalChar = 范围：关闭后的无效字符]
variableRangeMSBWrong = 范围：起始[后面应该跟一个数字
variableRangeStartPar = 范围：缺少起始[
variableRangeWrongLB = 范围：MSB索引必须大于/等于LSB索引
variableRangeWrongSep = 范围：MSB索引和LSB索引必须用“..”分隔
variableStartError = 名称必须以字母开头。
#
# model/Entry.java
#
busError = 电路中的输出值冲突。
oscillateError = 电路振荡。
#
# model/Parser.java
#
badVariableName = “%s”不是输入变量。
implicitAndOperator = (隐式AND)
invalidCharacterError = 无法识别的字符：‘%s’
lparenMissingError = 没有匹配的左括号。
missingBraceError = 没有匹配的大括号：“%s”
missingIdentifierError = 下标前缺少标识符：“%s”
missingLeftOperandError = 运算符“%s”缺少左操作数。
missingRightOperandError = 运算符“%s”缺少右操作数。
missingSubscriptError = 缺少下标：“%s”
rparenMissingError = 没有匹配的右括号。
unexpectedApostrophe = 意外的撇号(“‘”)
unexpectedAssignmentError = 意外的赋值运算符：“%s”
#
# model/Var.java
#
badVariableBitFormError = 变量名的格式必须为‘name[i]’
badVariableColonError = 变量名必须出现在‘：’之前
badVariableIndexError = 变量位索引必须是整数
variableFormat = 变量的格式必须为‘name[N..0]’
variableTooMuchBits = 变量的宽度不能超过32位
